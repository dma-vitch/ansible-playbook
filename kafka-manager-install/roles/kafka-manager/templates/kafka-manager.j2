#!/usr/bin/env bash
# kafka-manager This starts and stops kafka-manager
#
# description: This starts the Linux Auditing System Daemon, \
#              which collects security related events in a dedicated \
#              audit log. If this daemon is turned off, audit events \
#              will be sent to syslog.
#
### BEGIN INIT INFO
# Provides:          kafka-manager
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4
# Default-Stop:      0 1 6
# Description:       kafka-manager
# Short-Description: Enable kafka-manager service provided by kafka-manager

DAEMON_NAME=kafka-manager
DAEMON_PATH={{ KAFKA_MANAGER_PATH }}/current/bin

USER="{{ KAFKA_MANAGER_USER }}"
PORT="{{ KAFKA_MANAGER_PORT }}"
CONF="{{ KAFKA_MANAGER_PATH }}/current/conf/application.conf"
LOGDIR="{{ KAFKA_MANAGER_PATH }}/current/logs"
LOGS="${LOGDIR}/kafka-manager.log"
SHUTDOWN_TIMEOUT=15

JAVA_HOME="{{ ansible_env.JAVA_HOME |d(KAFKA_MANAGER_JAVAHOME)}}"

JVM_OPTS="-J-Xms128M -J-Xmx512m -J-server"

# Check that networking is up.
#[ ${NETWORKING} = "no" ] && exit 0

{% if KAFKA_MANAGER_HTTPS_ENABLED %}
WEB_OPTS="-Dhttp.port=disabled -Dhttps.port=$PORT"
{% else %}
WEB_OPTS="-Dhttp.port=$PORT"
{% endif %}

CMD="${DAEMON_PATH}/kafka-manager -Dconfig.file=${CONF} ${WEB_OPTS} -java-home ${JAVA_HOME} ${JVM_OPTS} >> ${LOGS} 2>&1 &"

PATH=$PATH:$DAEMON_PATH

# See how we were called.
case "$1" in
  start)
     # Start daemon.
     echo "Starting $DAEMON_NAME";
     mkdir -p ${LOGDIR}
     chown -R $USER ${LOGDIR}
     rm -rf {{ KAFKA_MANAGER_PATH }}/current/kafka-manager.pid
     DO="/sbin/runuser -s /bin/bash $USER -c"
     ${DO} "nohup ${CMD}"
     ;;
  stop)
     # Stop daemons.
     echo "Shutting down $DAEMON_NAME";
     pid=$(cat {{ KAFKA_MANAGER_PATH }}/current/kafka-manager.pid 2>/dev/null)
     #pid=$(ps ax | grep -i 'kafka-manager' | grep -v grep | awk '{print $1}')
     if [ -n "$pid" ]; then
        kill -TERM ${pid} &>/dev/null
          for i in $(seq 1 ${SHUTDOWN_TIMEOUT}) ; do
             kill -0 ${pid} &>/dev/null || break
             sleep 1
          done
        kill -KILL ${pid} &>/dev/null
        rm -rf {{ KAFKA_MANAGER_PATH }}/current/kafka-manager.pid
     else
        echo "Kafka-Manager was not Running"
     fi
     ;;
  restart)
     $0 stop
     sleep 2
     $0 start
     ;;
  status)
     pid=$(cat {{ KAFKA_MANAGER_PATH }}/current/kafka-manager.pid 2>/dev/null)
     if [ -n "$pid" ]; then
        echo "Kafka-Manager is Running as PID: $pid"
     else
       echo "Kafka-Manager is not Running"
     fi
     ;;
  *)
     echo "Usage: $0 {start|stop|restart|status}"
     exit 1
esac

exit 0